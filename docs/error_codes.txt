5XX

501 Not Implemented - For non-exitent request handling?




4XX

400 Bad Request - something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).

403 Forbidden -  the server understood the request but refuses to fulfill it (Applicable?  Maybe for lack of permissions in file opening).

404 Not Found - Self explanatory.

405 Not Allowed - Method is known by the server but not suported by the target resource. The origin server MUST generate an Allow header field in a 405 response containing a list of the target resource's currently supported methods.

406 Not Acceptable -  Target resource does not have a current representation that would be acceptable to the user agent and the server is unwilling to supply a default representation. The server SHOULD generate content containing a list of available representation characteristics and corresponding resource identifiers from which the user or user agent can choose the one most appropriate.

408 Request Timeout - Server did not receive a complete request message within the time that it was prepared to wait.

411 Length Required - Server refuses to accept the request without a defined Content-Length (Necessary?).

413 Content Too Large - Server is refusing to process a request because the request content is larger than the server is willing or able to process. The server MAY terminate the request, if the protocol version in use allows it; otherwise, the server MAY close the connection.

414 URI Too Long - Target URI is longer than the server is willing to interpret. This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into an infinite loop of redirection (e.g., a redirected URI prefix that points to a suffix of itself) or when the server is under attack by a client attempting to exploit potential security holes.

415 Unsupported Media type - Server is refusing to service the request because the content is in a format not supported by this method on the target resource. The format problem might be due to the request's indicated Content-Type or Content-Encoding, or as a result of inspecting the data directly. If the problem was caused by an unsupported content coding, the Accept-Encoding response header field (Section 12.5.3) ought to be used to indicate which (if any) content codings would have been accepted in the request. On the other hand, if the cause was an unsupported media type, the Accept response header field (Section 12.5.1) can be used to indicate which media types would have been accepted in the request.

